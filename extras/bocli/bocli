#! /usr/bin/env python
# -*- encoding: utf-8 -*-

"""\
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
B                                                                     B
B          BBBBBB     BBBBBBBB  BBk BBB  BBBBBBBB    BBBBBK           B
B          kBBBBBB  OKBBBBBBBB  BB  BBB  BBBBBBBBKO  BBRBBB           B
B          kBB  BB  BBB.  .BBB  BB BBO   BBB.  .BBB  BB  BBB          B
B          BBB BBB  BBk    .BB  BB BB    BB.    kBB  BB  .B           B
B          BBBBB    BB   O  BB  BBBB     BB  O   BB  BBOBBB           B
B           BBBBB   BBB. _ .BB  BBBB     BB. _ .BBB  BBBBK            B
B          BBB BBB  BBB,  ,BB   BB BB     BB.  ,BBB  BBBBBB           B
B          BBB  BB  BBBBBBBBB   BB kBB    BBBBBBBBB  RB  BB           B
B          BBBBBBB  BBBBBBBB    BB  BB     BBBBBBBB  BB  BB           B
B          BBBBBBB    BBBB      BBB BBB      BBBB    BB  BB           B
B                                                                     B
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 3
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software Foundation,
Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

@file bocli
@author Maurice AUDIN <maudin@bearstech.com>
@date 2015
@brief bokor client
"""


import cmd
import ConfigParser
import json
import os
import pycurl
import sys
import urllib

# Connection informations
server, user, password, base_url = None, None, None, None

# Get url and translate to json
def curl_json(url):
    with open('/tmp/cinego-cli.tmp', 'w') as fd:
        url = urllib.unquote(url)
        url = url.encode('utf-8')
        curl = pycurl.Curl()
        curl.setopt(pycurl.URL, url)
        curl.setopt(pycurl.WRITEDATA, fd)
        curl.setopt(curl.SSL_VERIFYPEER, 0)
        curl.perform()
        curl.close()
        fd.seek(0)
    return json.load(open('/tmp/cinego-cli.tmp'))

# Bokor command line class
class BkrCmd(cmd.Cmd):
    token = None
    prompt = "(bkr) "
    functions = []

    # Choose token_site
    def complete_token(self, text, line, start_index, end_index):
        js = curl_json(base_url)
        tokens = [str(x['token_site']) for x in js['answer']]
        if text:
            return [token for token in tokens if token.startswith(text)]
        else:
            return tokens
    def do_token(self, line):
        """Choose token_site [(bkr) token TOKEN]"""
        self.token = line
        for f in self.functions:
            delattr(self.__class__, "do_%s" % f)
        self.prompt = "(bkr [" + line + "]) "
        self.functions = []

        js = curl_json("%s/help?token_site=%s" % (base_url, self.token))
        modules = js['answer']

        def make_method(module, function):
            m = modules[module][function]
            def _method(self, line):
                cu = curl_json("%s/%s?token_site=%s&%s"
                               % (base_url, function, self.token,
                                  "&".join(line.split())))["answer"]
                print json.dumps(cu, indent=4)
            _method.__doc__ = m["doc"]
            return _method

        for m in modules.keys():
            for f in modules[m].keys():
                if f != "help":
                    setattr(self.__class__, "do_%s" % f, make_method(m, f))
                    self.functions.append(f)


    def do_exit(self, line):
        """Exit prompt [(bkr) exit]"""
        return True


if __name__ == '__main__':
    config_file = os.path.expanduser("~/.config/bocli.rc")
    args = sys.argv[1:]
    command = []
    while len(args) != 0:
        if len(command) == 0 and args[0] == "-c":
            if len(args) == 1:
                print "usage: bocli [-c config] [command]"
                exit(1)
            config_file = args[1]
            args = args[2:]
            continue
        command.append(args[0])
        args = args[1:]

    # Get config if file exists, print error and continue if invalid
    if os.path.exists(config_file):
        try:
            config = ConfigParser.ConfigParser()
            config.readfp(open(config_file))
            server, user, password = config.get("bocli", "server"), \
                                     config.get("bocli", "user"), \
                                     config.get("bocli", "password")
            base_url = "https://%s:%s@%s/" % (user, password, server)
        except Exception as e:
            print("Error in configuration file: %s" % e)
            server, user, password, base_url = None, None, None, None

    # Get configuration from command line if no configuration or invalid file
    if not server or not user or not password or not base_url:
        server          = raw_input("server: ")
        user            = raw_input("user: ")
        password        = raw_input("password: ")
        base_url        = "https://%s:%s@%s" % (user, password, server)

    if len(command) == 0:
        bkrcmd = BkrCmd()
        bkrcmd.cmdloop()
    else:
        args = "&".join(command[1:])
        command = command[0]
        print json.dumps(curl_json("%s/%s?%s" % (base_url, command, args)),
                         indent=4)
